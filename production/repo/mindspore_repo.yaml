---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mindspore-configmap
  namespace: repo
data:
  ssh.pub: |
    ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQChSk+/FF79F8ut0hpNuYQ4uhAgUSY4hzRIPvQ2uVTukP0B0A99NYPfDNICp7gLa6e7yzaj+bvCpgWZoZCNAWTBWkq+zHTgDDHrLtUE4zPC1guzuR+Gz3yeIzSt0iAzi9uG2p+qh7jUfl8QAwNOs3wosNenoZj7NmgsCF9M1o85msimRc8Roxnn5caao1RtdNkDHDqhw5QiS9doSUjoxT+esD0CI7RHAyMgMCfSlXXl/phpdSU2hVJSFXsHVBTiymkuMQe8Ylmls+OEmCe8Cy7lIqE/Q+56l62Pxv4UJpOWs9T/SrOEr5vtEPGghZzgo5ViewzAs3dGMaODSO25XhrIiRZ7hjBK9tjLOX7ZXfAsb4DpJljq2aPCrlEaGJsHc2laixKIOKogDbqFffM3eXwgEAxPUevX/mYnuyhAVrsRUl8HXIQnTuVIEeYVdmn2MA8I/y6MPWdN5VbLR5gOiNLOuSVhCq3sQLpTZ9CONF+zq+1layCoaGMIZw5JwYgWCQgCGNclbx8eMVY3+J3slH6VjzE/05Eys18HtpuAMCivBLGgpBGeCVdpQqkHodTn5ZjNZEBAgzHypiOgR/txMHhkTi4+1ZvTmSRWs9hggv4/IcDQFaj1f2JVds6lxGvJyOnoy9k1VUC0q4N6sptpJ/n+ElCJ4UaHE48La3Mu79R6+Q== mindspore_hosts
  rsyncd.conf: |
    log file = /dev/stdout
    use chroot = yes
    uid = root
    gid = root
    max connections = 10
    timeout = 600
    read only = yes

    [mindspore]
            path = /repo/mindspore
            comment = mindspore repo folder
            read only = true
            auth users = root
            secrets file = /etc/rsyncd.secrets
            ignore nonreadable = yes
            refuse options = checksum
            dont compress = *
  default.conf: |
    server {
        listen 80;

        if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})") {
               set $year $1;
               set $month $2;
               set $day $3;
        }
        access_log /var/log/nginx/access.log.$year$month$day main;

        server_name *.mindspore.cn;

        location / {
            root   /repo/mindspore;
            auth_basic "basic auth required";
            auth_basic_user_file /etc/nginx/conf/basic_auth_files;
            fancyindex on;
            fancyindex_exact_size off;
            fancyindex_localtime on;
            autoindex   on;
        }
        location = /favicon.ico {
                  log_not_found off;
                  access_log off;
        }
    }
    server {

        if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})") {
                set $year $1;
                set $month $2;
                set $day $3;
        }
        access_log /var/log/nginx/access.log.$year$month$day main;

        listen 443 ssl;

        server_name *.mindspore.cn;
        ssl on;
        ssl_certificate /etc/nginx/conf/ssl/fullchain.pem;
        ssl_certificate_key  /etc/nginx/conf/ssl/privkey.pem;

        location / {
            root   /repo/mindspore;
            auth_basic "basic auth required";
            auth_basic_user_file /etc/nginx/conf/basic_auth_files;
            fancyindex on;
            fancyindex_exact_size off;
            fancyindex_localtime on;
            autoindex   on;
        }

        location = /favicon.ico {
                    log_not_found off;
                    access_log off;
        }
    }

  nginx.conf: |-
    user  root;
    worker_processes  6;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;


    events {
        worker_connections  1024;
    }


    http {
        include       /etc/nginx/conf/mime.types;
        default_type  application/octet-stream;

        # used for geoip2
        geoip2 /etc/nginx/geoip/country/GeoLite2-Country.mmdb {
            $geoip2_metadata_country_build metadata build_epoch;
            $geoip2_data_country_code default=US source=$remote_addr country iso_code;
            $geoip2_data_country_name country names en;
        }

        geoip2 /etc/nginx/geoip/city/GeoLite2-City.mmdb {
            $geoip2_data_city_name default=ShenZhen city names en;
            $geoip2_data_location_latitude location latitude;
            $geoip2_data_location_longitude location longitude;
        }

        # the cidr used for elb cluster
        set_real_ip_from 100.125.0.0/16;
        real_ip_recursive on;
        real_ip_header X-Forwarded-For;

        log_format  main  '$remote_addr <$geoip2_data_country_code, $geoip2_data_country_name, $geoip2_data_city_name, $geoip2_data_location_latitude, $geoip2_data_location_longitude> '
                          '[$time_local] "$request" $status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" $request_filename';

        sendfile        on;
        tcp_nopush      on;

        keepalive_timeout  65;

        #gzip  on;

        include /etc/nginx/conf/conf.d/*.conf;
    }

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mindspore-data-volume
  namespace: repo
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5000Gi
  storageClassName: ssd
# Deployment for repo service
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: mindspore
  namespace: repo
  labels:
    app: repo-nginx-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: repo-nginx-pod
  template:
    metadata:
      labels:
        app: repo-nginx-pod
    spec:
      nodeSelector:
        # this used to select pod into the node which has toa enabled.
        toa_enabled: "true"
      containers:
        - name: repo-nginx
          image: swr.cn-north-1.myhuaweicloud.com/mindspore/nginx-extras:1.10.3
          imagePullPolicy: "Always"
          volumeMounts:
            - name: website-secrets-volume
              mountPath: /etc/nginx/conf/basic_auth_files
              subPath: auth_files
            - name: website-secrets-volume
              mountPath: /etc/nginx/conf/ssl/fullchain.pem
              subPath: server_crt
            - name: website-secrets-volume
              mountPath: /etc/nginx/conf/ssl/privkey.pem
              subPath: server_key
            - mountPath: /etc/nginx/conf/nginx.conf
              name: repo-nginx-configmap-volume
              subPath: nginx.conf
            - mountPath: /etc/nginx/conf/conf.d/default.conf
              name: repo-nginx-configmap-volume
              subPath: default.conf
            - mountPath: /repo
              name: mindspore-data-volume
            - mountPath: /var/log/nginx
              name: mindspore-log-volume
          command:
            - /bin/sh
            - -c
            - |
              mkdir -p /repo/mindspore
              exec nginx -g "daemon off;"
          env:
            - name: TZ
              value: Asia/Shanghai
          resources:
            requests:
              cpu: 6000m
              memory: 8000Mi
        - name: rsync-server
          image: mindspore/rsyncd:0.0.5
          imagePullPolicy: "Always"
          volumeMounts:
            - mountPath: /etc/rsyncd.conf
              name: repo-nginx-configmap-volume
              subPath: rsyncd.conf
            - mountPath: /etc/rsyncd.secrets.ro
              name: website-secrets-volume
              subPath: rsyncd_secrets
            - mountPath: /repo/mindspore
              name: mindspore-data-volume
            - mountPath: /root/.ssh/authorized_keys.ro
              name: repo-nginx-configmap-volume
              subPath: ssh.pub
          resources:
            requests:
              cpu: 6000m
              memory: 6000Mi
          command:
            - /bin/sh
            - -c
            - |
              cp /etc/rsyncd.secrets.ro /etc/rsyncd.secrets
              chmod 0400 /etc/rsyncd.secrets
              cp /root/.ssh/authorized_keys.ro /root/.ssh/authorized_keys
              chmod 0400 /root/.ssh/authorized_keys
              chown root:root /root/.ssh/authorized_keys
              /usr/sbin/sshd &
              exec /usr/bin/rsync --no-detach --daemon --config /etc/rsyncd.conf;
      volumes:
        - name: repo-nginx-configmap-volume
          configMap:
            name: mindspore-configmap
        - name: mindspore-data-volume
          persistentVolumeClaim:
            claimName: mindspore-data-volume
        - name: mindspore-log-volume
          persistentVolumeClaim:
            claimName: cce-obs-import-mindspore-repo-log
        - name: website-secrets-volume
          secret:
            secretName: website-secrets

---
apiVersion: v1
kind: Service
metadata:
  name: mindspore-service
  namespace: repo
  annotations:
    kubernetes.io/elb.class: union
    kubernetes.io/elb.id: 3bcca11e-b0cb-40f2-a751-17a8b25b9774
    kubernetes.io/elb.lb-algorithm: ROUND_ROBIN
spec:
  #We need set this into 'Local' since we need get the client IP of elb.
  externalTrafficPolicy: Local
  ports:
    - port: 443
      name: nginx-repo-https
      targetPort: 443
    - port: 873
      name: rsync-server-port
      targetPort: 873
    - port: 80
      name: nginx-repo-http
      targetPort: 80
    - port: 22
      name: rsync-ssh-server-port
      targetPort: 22
  selector:
    app: repo-nginx-pod
  type: LoadBalancer
  loadBalancerIP: 119.3.241.57
